{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marton_Kelemen\\\\private\\\\SDP-groep-test\\\\fe\\\\src\\\\components\\\\Calendar\\\\Calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AppointmentForm from './AppointmentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [popupAppointment, setPopupAppointment] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  useEffect(() => {\n    fetchAppointments();\n    fetchDepartments();\n  }, []);\n  const fetchAppointments = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/appointments/');\n      const data = await response.json();\n      const appointmentsData = data.map(appointment => ({\n        ...appointment,\n        start: new Date(appointment.start_datetime),\n        end: new Date(appointment.end_datetime)\n      }));\n      setAppointments(appointmentsData);\n    } catch (error) {\n      console.error(\"Error fetching appointments:\", error);\n    }\n  };\n  const fetchDepartments = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/departments/');\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        setDepartments(data);\n      } else {\n        console.error(\"Expected an array of departments, but got:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching departments:\", error);\n    }\n  };\n  const fetchEmployees = async departmentId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/employees/by-department/${departmentId}/`);\n      const data = await response.json();\n      setEmployees(data);\n    } catch (error) {\n      console.error(\"Error fetching employees:\", error);\n    }\n  };\n  const handleAppointmentClick = appointment => {\n    setPopupAppointment(appointment);\n    setIsCreating(false);\n    // Do not fetch employees when editing\n  };\n  const handleCreateNewAppointment = () => {\n    setIsCreating(true);\n    setPopupAppointment({\n      title: '',\n      start: new Date(selectedDate.setHours(6, 0, 0, 0)),\n      // Default start time at 6:00\n      end: new Date(selectedDate.setHours(7, 0, 0, 0)),\n      // Default end time at 7:00\n      description: '',\n      departmentId: 0,\n      participants: []\n    });\n    // Fetch employees for the default department when creating\n    fetchEmployees(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), (popupAppointment || isCreating) && /*#__PURE__*/_jsxDEV(AppointmentForm, {\n      appointment: popupAppointment,\n      isCreating: isCreating,\n      departments: departments,\n      employees: employees,\n      onSave: appointment => {\n        // Save logic\n      },\n      onDelete: appointmentId => {\n        // Delete logic\n      },\n      onCancel: () => {\n        setPopupAppointment(null);\n        setIsCreating(false);\n      },\n      onParticipantAdd: participantId => {\n        // Add participant logic\n      },\n      onParticipantRemove: participantId => {\n        // Remove participant logic\n      },\n      fetchEmployees: fetchEmployees\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateNewAppointment,\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Create New Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"y7q1dmqONszsgUz+Q7PrZ4kImPA=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","AppointmentForm","jsxDEV","_jsxDEV","Calendar","_s","appointments","setAppointments","departments","setDepartments","employees","setEmployees","selectedDate","setSelectedDate","Date","popupAppointment","setPopupAppointment","isCreating","setIsCreating","fetchAppointments","fetchDepartments","response","fetch","data","json","appointmentsData","map","appointment","start","start_datetime","end","end_datetime","error","console","Array","isArray","fetchEmployees","departmentId","handleAppointmentClick","handleCreateNewAppointment","title","setHours","description","participants","style","display","flexDirection","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onDelete","appointmentId","onCancel","onParticipantAdd","participantId","onParticipantRemove","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Marton_Kelemen/private/SDP-groep-test/fe/src/components/Calendar/Calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AppointmentForm from './AppointmentForm';\r\nimport { Appointment, Department, Employee } from './types';\r\n\r\nconst Calendar: React.FC = () => {\r\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n  const [departments, setDepartments] = useState<Department[]>([]);\r\n  const [employees, setEmployees] = useState<Employee[]>([]);\r\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\r\n  const [popupAppointment, setPopupAppointment] = useState<Appointment | null>(null);\r\n  const [isCreating, setIsCreating] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/appointments/');\r\n      const data = await response.json();\r\n      const appointmentsData = data.map((appointment: any) => ({\r\n        ...appointment,\r\n        start: new Date(appointment.start_datetime),\r\n        end: new Date(appointment.end_datetime),\r\n      }));\r\n      setAppointments(appointmentsData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching appointments:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/departments/');\r\n      const data = await response.json();\r\n      if (Array.isArray(data)) {\r\n        setDepartments(data);\r\n      } else {\r\n        console.error(\"Expected an array of departments, but got:\", data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchEmployees = async (departmentId: number) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/employees/by-department/${departmentId}/`);\r\n      const data = await response.json();\r\n      setEmployees(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAppointmentClick = (appointment: Appointment) => {\r\n    setPopupAppointment(appointment);\r\n    setIsCreating(false);\r\n    // Do not fetch employees when editing\r\n  };\r\n\r\n  const handleCreateNewAppointment = () => {\r\n    setIsCreating(true);\r\n    setPopupAppointment({\r\n      title: '',\r\n      start: new Date(selectedDate.setHours(6, 0, 0, 0)), // Default start time at 6:00\r\n      end: new Date(selectedDate.setHours(7, 0, 0, 0)),   // Default end time at 7:00\r\n      description: '',\r\n      departmentId: 0,\r\n      participants: [],\r\n    });\r\n    // Fetch employees for the default department when creating\r\n    fetchEmployees(0);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <h1>Calendar</h1>\r\n      {/* Add CalendarHeader and CalendarGrid components here */}\r\n      {(popupAppointment || isCreating) && (\r\n        <AppointmentForm\r\n          appointment={popupAppointment}\r\n          isCreating={isCreating}\r\n          departments={departments}\r\n          employees={employees}\r\n          onSave={(appointment) => {\r\n            // Save logic\r\n          }}\r\n          onDelete={(appointmentId) => {\r\n            // Delete logic\r\n          }}\r\n          onCancel={() => { setPopupAppointment(null); setIsCreating(false); }}\r\n          onParticipantAdd={(participantId) => {\r\n            // Add participant logic\r\n          }}\r\n          onParticipantRemove={(participantId) => {\r\n            // Remove participant logic\r\n          }}\r\n          fetchEmployees={fetchEmployees}\r\n        />\r\n      )}\r\n      <button onClick={handleCreateNewAppointment} style={{ marginTop: '10px' }}>\r\n        Create New Appointment\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}