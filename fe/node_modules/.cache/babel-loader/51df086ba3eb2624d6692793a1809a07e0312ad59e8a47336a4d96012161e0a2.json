{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marton_Kelemen\\\\private\\\\SDP-groep-test\\\\fe\\\\src\\\\components\\\\Calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [popupAppointment, setPopupAppointment] = useState(null);\n  useEffect(() => {\n    // Fetch appointments from the API\n    fetchAppointments();\n  }, []);\n  const fetchAppointments = async () => {\n    // Replace with your API endpoint\n    const response = await fetch('http://localhost:8000/api/appointments/');\n    const data = await response.json();\n    setAppointments(data.map(appointment => ({\n      ...appointment,\n      start: new Date(appointment.start_datetime),\n      end: new Date(appointment.end_datetime)\n    })));\n  };\n  const handleDateChange = event => {\n    setSelectedDate(new Date(event.target.value));\n  };\n  const getAppointmentsForDay = date => {\n    return appointments.filter(appointment => appointment.start.toDateString() === date.toDateString());\n  };\n  const renderAppointments = appointments => {\n    return appointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: `${appointment.start.getHours() * 50}px`,\n        height: `${(appointment.end.getHours() - appointment.start.getHours()) * 50}px`,\n        width: appointments.length > 1 ? '90%' : '100%',\n        left: `${index * 10}%`,\n        backgroundColor: 'lightblue',\n        border: '1px solid blue',\n        boxSizing: 'border-box',\n        cursor: 'pointer'\n      },\n      onClick: () => setPopupAppointment(appointment),\n      children: appointment.title\n    }, appointment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this));\n  };\n  const appointmentsForDay = getAppointmentsForDay(selectedDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '500px',\n      border: '1px solid #ccc',\n      padding: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        height: '1200px',\n        border: '1px solid #ddd'\n      },\n      children: [Array.from({\n        length: 24\n      }).map((_, hour) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '50px',\n          borderBottom: '1px solid #eee'\n        },\n        children: [hour, \":00\"]\n      }, hour, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)), renderAppointments(appointmentsForDay)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), popupAppointment && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '20%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: 'white',\n        padding: '20px',\n        border: '1px solid #ccc',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: popupAppointment.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: popupAppointment.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [popupAppointment.start.toLocaleTimeString(), \" - \", popupAppointment.end.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPopupAppointment(null),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"SoLgSzkQI3Qa+L4CokuSfKusVpE=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Calendar","_s","appointments","setAppointments","selectedDate","setSelectedDate","Date","popupAppointment","setPopupAppointment","fetchAppointments","response","fetch","data","json","map","appointment","start","start_datetime","end","end_datetime","handleDateChange","event","target","value","getAppointmentsForDay","date","filter","toDateString","renderAppointments","index","style","position","top","getHours","height","width","length","left","backgroundColor","border","boxSizing","cursor","onClick","children","title","id","fileName","_jsxFileName","lineNumber","columnNumber","appointmentsForDay","maxWidth","padding","type","onChange","Array","from","_","hour","borderBottom","transform","zIndex","description","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/Marton_Kelemen/private/SDP-groep-test/fe/src/components/Calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\ninterface Appointment {\r\n  id: number;\r\n  title: string;\r\n  start: Date;\r\n  end: Date;\r\n  description: string;\r\n}\r\n\r\nconst Calendar: React.FC = () => {\r\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\r\n  const [popupAppointment, setPopupAppointment] = useState<Appointment | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch appointments from the API\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const fetchAppointments = async () => {\r\n    // Replace with your API endpoint\r\n    const response = await fetch('http://localhost:8000/api/appointments/');\r\n    const data = await response.json();\r\n    setAppointments(data.map((appointment: any) => ({\r\n      ...appointment,\r\n      start: new Date(appointment.start_datetime),\r\n      end: new Date(appointment.end_datetime),\r\n    })));\r\n  };\r\n\r\n  const handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSelectedDate(new Date(event.target.value));\r\n  };\r\n\r\n  const getAppointmentsForDay = (date: Date) => {\r\n    return appointments.filter(appointment =>\r\n      appointment.start.toDateString() === date.toDateString()\r\n    );\r\n  };\r\n\r\n  const renderAppointments = (appointments: Appointment[]) => {\r\n    return appointments.map((appointment, index) => (\r\n      <div\r\n        key={appointment.id}\r\n        style={{\r\n          position: 'absolute',\r\n          top: `${appointment.start.getHours() * 50}px`,\r\n          height: `${(appointment.end.getHours() - appointment.start.getHours()) * 50}px`,\r\n          width: appointments.length > 1 ? '90%' : '100%',\r\n          left: `${index * 10}%`,\r\n          backgroundColor: 'lightblue',\r\n          border: '1px solid blue',\r\n          boxSizing: 'border-box',\r\n          cursor: 'pointer',\r\n        }}\r\n        onClick={() => setPopupAppointment(appointment)}\r\n      >\r\n        {appointment.title}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const appointmentsForDay = getAppointmentsForDay(selectedDate);\r\n\r\n  return (\r\n    <div style={{ maxWidth: '500px', border: '1px solid #ccc', padding: '10px' }}>\r\n      <input type=\"date\" onChange={handleDateChange} />\r\n      <div style={{ position: 'relative', height: '1200px', border: '1px solid #ddd' }}>\r\n        {Array.from({ length: 24 }).map((_, hour) => (\r\n          <div key={hour} style={{ height: '50px', borderBottom: '1px solid #eee' }}>\r\n            {hour}:00\r\n          </div>\r\n        ))}\r\n        {renderAppointments(appointmentsForDay)}\r\n      </div>\r\n      {popupAppointment && (\r\n        <div style={{ position: 'fixed', top: '20%', left: '50%', transform: 'translate(-50%, -50%)', backgroundColor: 'white', padding: '20px', border: '1px solid #ccc', zIndex: 1000 }}>\r\n          <h3>{popupAppointment.title}</h3>\r\n          <p>{popupAppointment.description}</p>\r\n          <p>\r\n            {popupAppointment.start.toLocaleTimeString()} - {popupAppointment.end.toLocaleTimeString()}\r\n          </p>\r\n          <button onClick={() => setPopupAppointment(null)}>Close</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}